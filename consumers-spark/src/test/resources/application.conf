akka {
  loglevel = "DEBUG"
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  logger-startup-timeout = 60s
  log-dead-letters = off
  log-dead-letters-during-shutdown = off


  remote {
    log-remote-lifecycle-events = off
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      port = 2892
      hostname = "localhost"
    }
  }

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    debug.fsm = true
  }

  cluster {
    log-info = on
    seed-nodes = ["akka.tcp://WASP@localhost:2892"]
    gossip-interval = 5s
    publish-stats-interval = 10s
    metrics.gossip-interval = 10s
    metrics.collect-interval = 10s
    roles = ["consumers-spark-streaming"]
  }
}

system-0 {
  akka {
    loglevel = "DEBUG"
    loggers = ["akka.event.slf4j.Slf4jLogger"]
    logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
    logger-startup-timeout = 60s
    log-dead-letters = off
    log-dead-letters-during-shutdown = off


    remote {
      log-remote-lifecycle-events = off
      enabled-transports = ["akka.remote.netty.tcp"]
      netty.tcp {
        port = 2893
        hostname = "localhost"
      }
    }

    actor {
      provider = "akka.cluster.ClusterActorRefProvider"
      debug.fsm = true
    }

    cluster {
      log-info = on
      seed-nodes = ["akka.tcp://WASP@localhost:2893"]
      gossip-interval = 5s
      publish-stats-interval = 10s
      metrics.gossip-interval = 10s
      metrics.collect-interval = 10s
      roles = ["consumers-spark-streaming"]
    }
  }
}


system-1 {
  akka {
    loglevel = "DEBUG"
    loggers = ["akka.event.slf4j.Slf4jLogger"]
    logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
    logger-startup-timeout = 60s
    log-dead-letters = off
    log-dead-letters-during-shutdown = off


    remote {
      log-remote-lifecycle-events = off
      enabled-transports = ["akka.remote.netty.tcp"]
      netty.tcp {
        port = 2894
        hostname = "localhost"
      }
    }

    actor {
      provider = "akka.cluster.ClusterActorRefProvider"
      debug.fsm = true
    }

    cluster {
      log-info = on
      seed-nodes = ["akka.tcp://WASP@localhost:2893"]
      gossip-interval = 5s
      publish-stats-interval = 10s
      metrics.gossip-interval = 10s
      metrics.collect-interval = 10s
      roles = ["consumers-spark-streaming"]
    }
  }
}


system-2 {
  akka {
    loglevel = "DEBUG"
    loggers = ["akka.event.slf4j.Slf4jLogger"]
    logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
    logger-startup-timeout = 60s
    log-dead-letters = off
    log-dead-letters-during-shutdown = off


    remote {
      log-remote-lifecycle-events = off
      enabled-transports = ["akka.remote.netty.tcp"]
      netty.tcp {
        port = 2895
        hostname = "localhost"
      }
    }

    actor {
      provider = "akka.cluster.ClusterActorRefProvider"
      debug.fsm = true
    }

    cluster {
      log-info = on
      seed-nodes = ["akka.tcp://WASP@localhost:2893"]
      gossip-interval = 5s
      publish-stats-interval = 10s
      metrics.gossip-interval = 10s
      metrics.collect-interval = 10s
      roles = ["consumers-spark-streaming"]
    }
  }
}

coordinator {
  akka {
    loglevel = "DEBUG"
    loggers = ["akka.event.slf4j.Slf4jLogger"]
    logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
    logger-startup-timeout = 60s
    log-dead-letters = off
    log-dead-letters-during-shutdown = off


    remote {
      log-remote-lifecycle-events = off
      enabled-transports = ["akka.remote.netty.tcp"]
      netty.tcp {
        port = 2896
        hostname = "localhost"
      }
    }

    actor {
      provider = "akka.cluster.ClusterActorRefProvider"
      debug.fsm = true
    }

    cluster {
      log-info = on
      seed-nodes = ["akka.tcp://WASP@localhost:2893"]
      gossip-interval = 5s
      publish-stats-interval = 10s
      metrics.gossip-interval = 10s
      metrics.collect-interval = 10s
    }
  }
}
